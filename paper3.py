
from sympy import * 
#今回解を求めるのにsympyのsolve関数を用いる
#そのため，それに付随する関数を全てimportした

#ここから説明文の出力
print("--------------------------")
print("(1) c0, c1 によって \n c0 + c1 * x = 0 \nの解xを求める")
print("--------------------------")
print("(2) c0, c1, c2 によって \n c2 * x ** 2 + c1 * x + c0 = 0 \nの解を求める")
print("--------------------------")
print("注意：全ての値は整数値で入力してください")
print("--------------------------")
#ここまで説明文

c0 = int(input("c0を入力してください :"))
c1 = int(input("c1を入力してください :"))
c2 = int(input("c2を入力してください :"))
#input関数を用いて整数値をコマンドライン上で入力させる
#int関数で入力された文字列を整数値に変換した

print("--------------------------")

x = symbols("x")
#sympyのsymbols関数で解を求めるための文字を定義した

y1 = c0 + c1 * x
y2 = c2 * x ** 2 + c1 * x + c0
#ここでsolve関数で解くための数式を定義した
#y1が(1), y2が(2)の数式である

solve_1 = solve(y1, x)
solve_2 = solve(y2, x)
#solve関数でそれぞれの解を求めた

print("(1)について")
if c1 == 0:
    print("警告：C1 はゼロです。")
    #c1が0の場合解を持たないため警告文を出力した
else:
    print("解は x = " + str(solve_1[0]) + " です。")
    #先ほど求めた解を出力した


print("--------------------------")

print("(2)について")
D = c1 ** 2 - 4 * c0 * c2
#ここで判別式Dを定義した
#後に使う
if c2 == 0:
    if c1 == 0:
        print("警告：C1 とC2 はゼロです。")
        #c1とc2がどちらも0の場合解を持たないため警告文を出力した
    else:
        print("解は x = " + str(solve_2[0]) + " です。")
        #x ** 2の項がc2=0になるため解が一つのみ求まる
        #なお，これは重解ではない
elif D == 0:
    print("解は x = " + str(solve_2[0]) + ", " + str(solve_2[0]) + " です。")
    #これは重解であるため二度結果を出力した．
elif D < 0:
    print("実数解なし")
    #解が複素数になり実数解がないため「実数解なし」と出力した
else:
    print("解は x = " + str(solve_2[0]) + ", " + str(solve_2[1]) + " です。")
    #上のif文, elif文の条件に当てはまらなかったものはすべて重解でない実数解を2つ持つ
    #elseで条件がif,elif全てFalseになったものを出力した．
    
i = input("exit → enter :")
exit()